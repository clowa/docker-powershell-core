# This Dockerfile builds a cross platform docker image of powershell.
# It uses the GitHub releases of powershell core to install powershell
# from tarball.

FROM --platform=$BUILDPLATFORM ubuntu:20.04 as build

ARG POWERSHELL_VERSION
ARG BUILDPLATFORM
ARG TARGETOS
ARG TARGETARCH

# What's going on here?
# - Install curl to download tarball
# - Translate architecture to match powershell architecture
# - Download the powershell '.tar.gz' archive

RUN apt-get update -qq && \
    apt-get install -qq --yes curl && \
    case ${TARGETARCH} in \
         "amd64") PWSH_ARCH=x64           ;; \
         "arm")   PWSH_ARCH=arm32         ;; \
         *)       PWSH_ARCH=${TARGETARCH} ;; \
    esac && \
    curl --silent --location --output /tmp/powershell.tar.gz https://github.com/PowerShell/PowerShell/releases/download/v${POWERSHELL_VERSION}/powershell-${POWERSHELL_VERSION}-${TARGETOS}-${PWSH_ARCH}.tar.gz

# Create the target folder where powershell will be placed and expand powershell to the target folder
RUN mkdir -p /opt/microsoft/powershell/7 && \
    tar -zxf /tmp/powershell.tar.gz -C /opt/microsoft/powershell/7

FROM ubuntu:20.04 as final

#LABEL maintainer="My Company Team <email@example.org>"

# Upgrade packages and cleanup unused dependencies
RUN apt-get update -qq && \ 
    apt-get full-upgrade -qq --yes && \
    apt-get dist-upgrade -qq --yes && \
    apt-get autoremove -qq --yes


RUN apt-get install -qq --yes locales && \
    locale-gen en_US.UTF-8
    
ENV \
    # Define ENVs for Localization/Globalization
    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false \
    # Set a fixed location for the Module analysis cache.
    # See: https://github.com/PowerShell/PowerShell-Docker/issues/103
    PSModuleAnalysisCachePath=/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache

# Install additional CA certs.
RUN apt-get install -qq --yes ca-certificates

# Install the requirements of powershell / .NET
RUN apt-get install -qq --yes --no-install-recommends \
        less \
        libc6 \
        libgcc1 \
        libgssapi-krb5-2 \
        libicu66 \
        libssl1.1 \
        libstdc++6 \
        zlib1g \
        libgdiplus

# Copy only the files we need from the previous stage
COPY --from=build ["/opt/microsoft/powershell", "/opt/microsoft/powershell"]

# Give all user execute permissions and remove write permissions for others
RUN chmod a+x,o-w /opt/microsoft/powershell/7/pwsh && \
    # Create the pwsh symbolic link that points to powershell
    ln -s /opt/microsoft/powershell/7/pwsh /usr/bin/pwsh

# Setup powershell package repositories.
RUN /usr/bin/pwsh -c "Register-PSRepository -Default"
RUN /usr/bin/pwsh -c "Register-PackageSource -Name Nuget -Location http://www.nuget.org/api/v2 â€“ProviderName Nuget | Out-Null"

CMD ["/usr/bin/pwsh"]